# -*- coding: utf-8 -*-
import re
import os
import pickle
from os import listdir
from os.path import isfile, join

def getOPCode(f, PC_opcodes):

    Context = f.readlines()
    OPList = ''
    sign = False

    for i, line in enumerate(Context):
        if re.search('Pure code', line):
            sign = True
            index = line.find(';')
            sign_head = False if index == 0 else True
        if re.search(r'Pure\sdata|Externs|Uninitialized|Imports\sfrom', line):
            sign = False

        if sign:
            if sign_head:
                line = line[index-1:]
            line = line.expandtabs()
            line = line.strip()
            if re.search(r'proc\snear|endp|loc_|sub_|DATA\sXREF|\sdb\s|\sdd\s|\sdb\s|\sdt\s|\sdw\s|unicode|=', line):
                continue
            element = line.split(' ')

            if len(element[0]) < 6 and not any(char.isdigit() for char in element[0]) and not re.search('[ 0123456789/?%":\|\.\*_\(\)\[\]]', element[0]) and element[0].strip() != '':
                if re.match(r';|db|dd|align|sub_|loc_|\.|extrn|_text|.*:|include|dw|PRESS|public|off_', element[0]):
                    continue
                if element[0] in PC_opcodes:
                    OPList += (PC_opcodes[element[0]] + ' ')
                else:
                    OPList += (element[0] + ' ')

    return OPList

BenginPath = "PC_Sample\\Benign"
MalwarePath = "PC_Sample\\Malware"

list_bengin_files = [BenginPath + os.path.sep + file for file in listdir(BenginPath) if isfile(join(BenginPath, file)) and re.search(r'\.asm', file)]
list_malware_files = [MalwarePath + os.path.sep + file for file in listdir(MalwarePath) if isfile(join(MalwarePath, file)) and re.search(r'\.asm', file)]

nb_sample = len(list_bengin_files) + len(list_malware_files)
Bengin_OPCode = [0] * len(list_bengin_files)
Malware_OPCode = [0] * len(list_malware_files)
PC_opcodes = {}
with open("TranslateOpcodes_PC.txt") as fop:
    for linee in fop:
        (key, val) = linee.split()
        PC_opcodes[key] = val

for i, bengin_file in enumerate(list_bengin_files):

    f = open(bengin_file, 'r', encoding='utf-8', errors='ignore')
    print('benign:', bengin_file, 'num = ', i + 1, '/',  len(list_bengin_files))

    Bengin_OPCode[i] = getOPCode(f, PC_opcodes)
    f.close()

for i, malware_file in enumerate(list_malware_files):

    f = open(malware_file, 'r', encoding='utf-8', errors='ignore')
    print('malware:', malware_file, 'num = ', i + 1, '/',  len(list_malware_files))

    Malware_OPCode[i] = getOPCode(f, PC_opcodes)
    f.close()


outfile1 = open('BMsave\Bengin_PC_OPCodeList', 'w+b')
pickle.dump(Bengin_OPCode, outfile1)
outfile1.close()

outfile1 = open('BMsave\Malware_PC_OPCodeList', 'w+b')
pickle.dump(Malware_OPCode, outfile1)
outfile1.close()
